/**
  * Tugberk GOC
  * 115200084
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Just like Ram8, ram64 will consist of 8 component parts, with i/o
    // switched using mux/dmux. the most significant 3 bits of the address
    // will indicate which RAM8 to use, while the least significant 3 bits will 
    // be given to the RAM8 for its own addressing
    RAM8(in=in, load=load1, address=address[0..2], out=out1);
    RAM8(in=in, load=load2, address=address[0..2], out=out2);
    RAM8(in=in, load=load3, address=address[0..2], out=out3);
    RAM8(in=in, load=load4, address=address[0..2], out=out4);
    RAM8(in=in, load=load5, address=address[0..2], out=out5);
    RAM8(in=in, load=load6, address=address[0..2], out=out6);
    RAM8(in=in, load=load7, address=address[0..2], out=out7);
    RAM8(in=in, load=load8, address=address[0..2], out=out8);

    // Which RAM8 is being written to
    DMux8Way(in=load, a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8, sel=address[3..5]);

    // Which RAM8 is being read from
    Mux8Way16(out=out, a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[3..5]);

}